#+TITLE: Raspiland
#+AUTHOR: Yurii Voderatskyi
#+DESCRIPTION: This project aims to automate configuration of my Raspberry Pi (RPi)

This project contains configurations for my Raspberry Pi (RPi)

* Pre-requisites
*** Your machine
 - [X] =Arch= based OS (for example, =Manjaro=) with =yay= package installed
 - [X] =Python 3.7+= and =poetry= installed
*** Raspberry
 - [X] Internet connectivity: Ethernet or Wi-Fi
 - [X] SSH access enabled
* Preparing for RPi OS for installation
  :PROPERTIES:
  :header-args: :tangle 10-prepare-sd-card.sh :comments both
  :END:
*** Plug-in the SD card
*** Install =Raspberry Pi Imager=: The official app to flash RPi images
    #+BEGIN_SRC shell :results output
      echo 'Installing rpi-imager from AUR if not installed...'
      test rpi-imager || yay -Sy rpi-imager
    #+END_SRC

    #+RESULTS:
    : Installing rpi-imager from AUR if not installed

*** Flash =Ubuntu= to the SD card
    #+BEGIN_SRC shell
      echo ''
      echo 'Please, wait until flashing and verification is complete. Once done, reconnect the card before closing the program.'
      rpi-imager > /dev/null 2>&1
    #+END_SRC
    Select =Operating System=, =SD Card= and click on =WRITE= button. Wait for completion of the installation and verification.
    [[./images/pi-imager.png]]
*** Configure Wi-Fi and SSH
    #+BEGIN_SRC shell
      echo ''
      echo 'Please select your WI-Fi interface and network for RPi to connect to...'
      SSID=$(ip link | grep -Po "(?<=^\d:\W).*?(?=:)" | yank | xargs -I % sh -c 'sudo iwlist % scan' | grep -Po "(?<=ESSID:\").*(?=\")" | yank -l)
      [ -n $SSID ] || exit -1

      echo ''
      echo "Please, enter the password to connect to ${SSID}"
      echo -n 'Password:'
      read -s PASSWORD
      echo "RPi will connect to ${SSID} network using password ${PASSWORD}."

      echo ''
      echo 'Please, select where system boot partition is mounted...'
      MNT_DIR=$(sudo mount | yank)
      [ -n $MTN_DIR ] || exit -1
      echo "System boot parition is mounted to ${MNT_DIR}"

      echo ''
      echo "Creating empty file at ${MNT_DIR}/ssh"
      [ -f ${MNT_DIR}/ssh ] || sudo tee -a ${MNT_DIR}/ssh < "" || echo exit -1

      echo ''
      echo "Disabling expiration of the user"
      sudo sed -i.bak 's/expire:\ true/expire: false/' ${MNT_DIR}/user-data

      echo ''
      echo ''
      echo "Setting Wi-Fi configuration to ${MNT_DIR}/network-config"
      sudo tee -a ${MNT_DIR}/network-config <<EOF
      wifis:
        wlan0:
          dhcp4: true
          optional: true
          access-points:
            ${SSID}:
              password: "${PASSWORD}"
      EOF
    #+END_SRC

    #+RESULTS:

* Let's get started
  :PROPERTIES:
  :header-args: :tangle 20-install.sh :comments both
  :END:
** Check SSH connection
    #+BEGIN_SRC shell
      poetry run ansible raspberry -i hosts.ini -m ping -u pi --ask-pass
    #+END_SRC
 
     #+BEGIN_EXAMPLE
     âžœ  poetry run ansible raspberry -i hosts.ini -m ping
     SSH password:
     [WARNING]: Platform linux on host 192.168.1.112 is using the discovered Python interpreter at
     /usr/bin/python, but future installation of another Python interpreter could change this. See
     https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more
     information.
     192.168.1.112 | SUCCESS => {
     "ansible_facts": {
       "discovered_interpreter_python": "/usr/bin/python"
     },
     "changed": false,
     "ping": "pong"
     }
   #+END_EXAMPLE
** Install ansible roles
   #+BEGIN_SRC shell :tangle check.sh :comments both
   poetry run ansible-galaxy role install -r requirements.yaml -p ./roles
   #+END_SRC

   #+RESULTS:

* Links
- Raspbian: https://www.raspberrypi.org/downloads/raspbian/
- Raspbian Wi-Fi: https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md
- Raspbian SSH: https://www.raspberrypi.org/documentation/remote-access/ssh/
- Raspbian passwordless SSH: https://www.raspberrypi.org/documentation/remote-access/ssh/passwordless.md
- Ansible Documentation: https://docs.ansible.com/
